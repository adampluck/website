<% if assets = (params[:assets].try(:to_i) || 10) %>
  <% assets = 1 if assets < 1 %>
  <% assets = 20 if assets > 20 %>
<% end %>
<% proposed = Hash[Strategy.proposed(n: assets)] %>
<% actual = Hash[JSON.parse(Iconomi.get('/v1/strategies/DECENTCOOP/structure'))['values'].map { |h| [h['assetTicker'], h['targetWeight']] }] %>
<% rebalanced = Hash[JSON.parse(Iconomi.get('/v1/strategies/DECENTCOOP/structure'))['values'].map { |h| [h['assetTicker'], h['rebalancedWeight']] }] %>
<% diff = Hash[actual.map { |k,v| [k, actual[k] - rebalanced[k]] }] %>
<% strategy = JSON.parse(Iconomi.get('/v1/strategies/DECENTCOOP/structure')) %>
<% statistics = JSON.parse(Iconomi.get('/v1/strategies/DECENTCOOP/statistics')) %>
<% y = 50000 %>
<h1 class="text-center">Metastrategy</h1>
<!-- Performance -->
<table class="table" style="width: auto; margin: auto">
  <thead>
    <tr>
      <th>24H</th>
      <th>7D</th>
      <th>1M</th>
      <th>3M</th>
      <th>6M</th>
      <th>1Y</th>
    </tr>
  </thead>
  <tr>
    <% %w[day week month three_month six_month year].each { |t| %>
    <td>
      <% x = statistics['returns'][t.upcase] %>
      <% if x %>
        <span style="color: <%= if x > 0; 'green'; elsif x < 0; 'red'; end %>">
          <%=number_to_percentage(x*100, :precision => 1)%>
        </span>
      <% end %>
    </td>
    <% } %>
  </tr>
</table>
<!-- Rebalancing -->
<p class="lead text-center">
  Rebalanced <%= time_ago_in_words strategy['lastRebalanced'] %> ago
  <% Delayed::Job.where(handler: /method_name: :rebalance/).each { |delayed_job| %>
  &middot; Rebalancing in <abbr data-toggle="tooltip" title="<%=delayed_job.run_at%>"><%=time_ago_in_words delayed_job.run_at %></abbr>
  <% } %>
</p>
<!-- Alerts -->
<% Alert.order('created_at desc').limit(5).each { |alert| %>
<p class="text-center">
  âš¡
  <%= alert.ticker %>
  <small><%=timeago alert.created_at%></small>
</p>
<% } %>
<!-- Assets -->
<table class="table" style="width: auto; margin: auto">
  <thead>
    <tr>
      <th></th>
      <th>Asset</th>
      <th></th>
      <th>Current weight</th>
      <th>Proposed weight</th>
    </tr>
  </thead>
  <% (proposed.keys + actual.keys + Asset.where(:multiplier.ne => nil).pluck(:ticker)).uniq.each { |k| %>
  <% asset = Asset.find_by(ticker: k) %>
  <tr>
    <td style="vertical-align: middle; text-align: right; width: 10vw">
      <% if actual[k] %>
        <% if diff[k] < 0 %>
          <div class="d-none d-sm-inline-block" style="position:relative; top: 0.2rem; height: 1rem; background: <%= if diff[k] > 0; 'green'; elsif diff[k] < 0; 'red'; end %>; width: <%="#{100*diff[k]/diff.values.min}%"%>"></div>
        <% end %>
      <% end %>
    </td>
    <td class="assetName" style="white-space: nowrap;">
      <a target="_blank" href="https://www.iconomi.com/asset/<%=k%>">
        <%= asset.name %> (<%= k %>)
      </a>
      <% if asset.multiplier %>
        <span class="badge badge-primary"><%=asset.multiplier == asset.multiplier.to_i ? asset.multiplier.to_i : asset.multiplier%>x</span>
      <% end %>
    </td>
    <td style="vertical-align: middle; width: 10vw">
      <% if actual[k] %>
        <% if diff[k] > 0 %>
          <div class="d-none d-sm-inline-block" style="position:relative; top: 0.2rem; height: 1rem; background: <%= if diff[k] > 0; 'green'; elsif diff[k] < 0; 'red'; end %>; width: <%="#{100*diff[k]/diff.values.max}%"%>"></div>
        <% end %>
      <% end %>
    </td>
    <td class="actual" style="white-space: nowrap;">
      <% if actual[k] %>
        <%= number_to_percentage (actual[k]*100), precision: 2 %>
        <small>
          <span style="color: <%= if diff[k] > 0; 'green'; elsif diff[k] < 0; 'red'; end %>">
            <%= '+' if diff[k] > 0 %><%=(diff[k]*10000).round%>
          </span>
        </small>
      <% end %>
    </td>
    <td>
      <% if proposed.keys.include?(k) %>
        <%= number_to_percentage (proposed[k]*100), precision: 2 %>
      <% end %>
    </td>
  </tr>
  <% } %>
  <tfoot>
    <tr>
      <th></th>
      <th></th>
      <th></th>
      <th>
        <%= number_to_percentage (actual.map { |_k,v| v }.sum*100), precision: 2 %>
      </th>
      <th>
        <%= number_to_percentage (proposed.map { |_k,v| v }.sum*100), precision: 2 %>
      </th>
    </tr>
  </tfoot>
</table>
<style>
  @media(min-width: 768px) {
  td.assetName { width: 1px;  padding-left: 0; padding-right: 0;}
  td.actual { width: 1px;  }
  }
</style>
