<script>
  function drawNetwork() {

  scale = chroma.scale(['#6D71C6', '#B16DC6']);

          node_min_width = 10
          node_min_color = 0.1
          node_color_scale = <%=@network.vterms.pluck(:weight).max>
          edge_min_color = 0
          edge_color_scale = <%=@network.vedges.pluck(:weight).max>
          edge_min_opacity = 0.1
          edge_opacity_scale = <%=@network.vedges.pluck(:weight).max>

          cy = cytoscape({

          container: $('#cy'),
                  elements: [
  <% vterm_ids = vterms.pluck(:id); vterms.each { |vterm| %>
                    { data: {id: '<%= vterm.id %>', name: "<%= vterm.term %>", weight: <%= w = vterm.weight %>, width: (node_min_width +<%= w %>), color: scale(node_min_color + (<%= w %> / node_color_scale)).hex()} },
  <% } %>
  <% vedges.where(:weight.gt => 0).each { |vedge| next unless [vedge.source_id, vedge.sink_id].all? { |id| vterm_ids.include?(id) } %>
                    {
                    data: {id: '<%= vedge.id %>', source: '<%= vedge.source_id %>', target: '<%= vedge.sink_id %>', weight: <%= w = vedge.weight %>, color: scale(edge_min_color + (<%= w %> / edge_color_scale)).hex(), opacity: (edge_min_opacity + (<%= w %> / edge_opacity_scale))}
                    },
  <% } %>
                  ],
                  style: [
                  {
                  selector: 'node',
                          style: {
                                  'background-color': 'data(color)',
                                  'opacity': 0.75,
                                  'color': 'white',
                                  'label': 'data(name)',
                                  'width': 'data(width)',
                                  'height': 'data(width)'
                          }
                  },
                  {
                  selector: 'edge',
                          style: {
  <% if defined?(edge_labels) %> 'label': 'data(weight)', <% end %>
                                  'opacity': 'data(opacity)',
                                  'line-color': 'data(color)',
                          }
                  }
                  ],
                  layout: {
                  name: 'cola',
                          nodeSpacing: function(node){ return 40; },
                  }

          });
  cy.on('tap', 'node', function(){
  window.location.href = '/k/<%=@network.slug%>/terms/' + this.data('name');
  });
  cy.on('tap', 'edge', function(){
  window.location.href = '/k/<%=@network.slug%>/edges/' + this.data('id');
  });
  cy.minZoom(0.5)

  }

  $(function() {
  drawNetwork()
          $(window).one('focus', function() { drawNetwork() })
  })
</script>
<div id="cy" class="card shadow-sm" style="height: 500px"></div>
